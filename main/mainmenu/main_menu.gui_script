function load_volume()
	local filename = sys.get_save_file("sys_save_load", "volume") -- <1>
	local data = sys.load(filename) -- <2>
	return data.volume or 50   -- <3>
end


function init(self)
	msg.post(".","acquire_input_focus")
	
	self.volume = load_volume()
	print(self.volume)
	sound.play('/mainmenu#menusound', {gain  = self.volume})
	-- table containing all the nodes and the keyboard keys used in the main menu and also stores the colour each node will change to 
	self.list1 = {
		{node = 'play', key = 'p', colour = vmath.vector4(0.75,0.75,1,0.75) },
		{node = 'exit', key = 'q', colour = vmath.vector4(0.75,0.75,1,0.75)},
		{node = 'options',key = 'o', colour = vmath.vector4(0.75,0.75,1,0.75)},
		{node = 'minigame', key= 's', colour = vmath.vector4(0.75,0.75,1,0.75)},
		{node = 'help', key = 'h', colour = vmath.vector4(0.75,0.75,1,0.75)},
	}
	self.hover = false
	self.sound_effect_playing = 0
end

function final(self)
	msg.post(".","release_input_focus")
end
function update(self, dt)
	print(self.sound_effect_playing)
end
function on_input(self, action_id, action)

	
	function touching_node(name_of_node)
		return gui.pick_node(gui.get_node(name_of_node), action.x, action.y)
	end
	
	
	for i,v in ipairs(self.list1) do  -- loops through the table checking if a node is being touched
		
		if touching_node(v.node) then
			 -- if it is then it tells the game is hovered
			self.hover = true
			if self.sound_effect_playing <= 1 then

				sound.play('/mainmenu#sound_effect', {gain = self.volume})
				self.sound_effect_playing = self.sound_effect_playing + 1 

			end 
			if action.pressed  then
				-- if pressed it sends the user to the next screen
				
				msg.post("main:/controller", "show " .. v.node)    -- tells the controller to show the next screen

			else
				if self.hover then
					
					-- if not then it changes the colour of the node 
					gui.animate(gui.get_node(v.node),gui.PROP_COLOR,v.colour,gui.EASING_INSINE, 0.05)
					--gui.set_scale(gui.get_node(v.node), vmath.vector3(0.375,0.375,1))
					gui.animate(gui.get_node(v.node),gui.PROP_SCALE , vmath.vector3(0.375,0.375,1), gui.EASING_LINEAR, 0.1)
					
					
					self.hover = false
					
				end
			end
			-- only when hovering is finished and the colour of the node is white will it change the size and the colour
		elseif  self.hover == false and gui.get_color(gui.get_node(v.node)) == v.colour then
			self.sound_effect_playing = self.sound_effect_playing - 1
			
			gui.animate(gui.get_node(v.node),gui.PROP_SCALE , vmath.vector3(0.25,0.25,1), gui.EASING_LINEAR, 0.05)
			gui.animate(gui.get_node(v.node),gui.PROP_COLOR,vmath.vector4(1,1,1,1),gui.EASING_INSINE, 0.1)

		
			
			
			-- gui.set_color(gui.get_node(v.node),vmath.vector4(1,1,1,1))
			-- gui.set_scale(gui.get_node(v.node), vmath.vector3(0.25,0.25,1))
		end
		
		-- handles the keyboard shortcut
		if action_id == hash(v.key) then
			msg.post("main:/controller", "show " .. v.node)
		end
	end
	
end