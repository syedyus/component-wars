function load_volume()
	local filename = sys.get_save_file("sys_save_load", "volume") -- <1>
	local data = sys.load(filename) -- <2>
	return data.volume or 5   -- <3>
end

function save_volume(volume)
	local filename = sys.get_save_file("sys_save_load", "volume")
	sys.save(filename, { volume = volume })  -- <4>
end
local function load_music_volume()
	local file = sys.get_save_file("sys_save_load", "music") -- <1>
	local data = sys.load(file) -- <2>
	return data.music or 5   -- <3>
end

local function save_music_volume(volume)
	local file = sys.get_save_file("sys_save_load", "music")
	sys.save(file, { music = music })  -- <4>
end


function init(self)
	
	msg.post('.', 'acquire_input_focus')
	self.nodes = {
		{node = 'master volume',volume = load_volume() * 10},
		{node = 'music volume', volume = load_music_volume()},
		{node = 'sound effect volume', volume = 50}
	}
	for i,v in ipairs(self.nodes) do
		gui.set_text(gui.get_node(v.node),v.volume)
	end	
	
end
function hover(name_of_node,colour_being_set,size_being_set)
	-- applies menu animations to a node 
	gui.animate(gui.get_node(name_of_node),gui.PROP_COLOR, colour_being_set,gui.EASING_LINEAR,0.05)
	gui.animate(gui.get_node(name_of_node),gui.PROP_SCALE, size_being_set,gui.EASING_LINEAR,0.1)

end
function final(self)
	msg.post('.','release_input_focus')
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	
	
end

function on_input(self, action_id, action)
	function touching_node(name_of_node)
		return gui.pick_node(gui.get_node(name_of_node), action.x, action.y)
	end
	if touching_node('Back') then
		if action.pressed then
			
			msg.post("main:/controller", 'show main')
		else
			hover('Back',vmath.vector4(0.5,0.5,0.5,0.5), vmath.vector3(0.375,0.375,1))
		end
	else
		if gui.get_color(gui.get_node('Back')) == vmath.vector4(0.5,0.5,0.5,0.5) then
			hover('Back',vmath.vector4(1,1,1,1), vmath.vector3(0.25,0.25,1))
		end
	end
	if action_id == hash('esc') then
		msg.post("main:/controller", 'show main')
	end
	
	for i,v in ipairs(self.nodes) do
		

		if v.volume > 0 and touching_node(v.node .. ' down')  then
			if action.pressed then
				
				v.volume = v.volume -10
				
				if v.node == 'master volume' then
					
					save_volume(v.volume/10)
				elseif v.node == 'music volume' then
					save_music_volume(v.volume)
					print('yes')
					print(v.volume)
					
					
				end
				
				gui.set_text(gui.get_node(v.node),v.volume )
				
			else
				hover(v.node .. ' down',vmath.vector4(0.5,0.5,0.5,0.5), vmath.vector3(1,1,1))
			end
				
		elseif v.volume < 100 and touching_node(v.node .. ' up')  then
			if action.pressed then
				
				v.volume = v.volume + 10
				if v.node == 'master volume' then
					save_volume(v.volume/10)
				elseif v.node == 'music volume' then
					save_music_volume(v.volume)
					print(load_volume())
				end
				gui.set_text(gui.get_node(v.node),v.volume )
			else
				hover(v.node .. ' up',vmath.vector4(0.5,0.5,0.5,0.5), vmath.vector3(1,1,1))
				
			end
		elseif not touching_node(v.node..' up') and gui.get_color(gui.get_node(v.node.. ' up')) == vmath.vector4(0.5,0.5,0.5,0.5) or v.volume == 100 then
			hover(v.node .. ' up',vmath.vector4(1,1,1,1), vmath.vector3(1,1,1))
			
		elseif not touching_node(v.node .. ' down') and gui.get_color(gui.get_node(v.node .. ' down')) == vmath.vector4(0.5,0.5,0.5,0.5) or v.volume == 0 then
			hover(v.node .. ' down',vmath.vector4(1,1,1,1), vmath.vector3(1,1,1))
			
			
			
			

		
		end
	end
	
			
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
