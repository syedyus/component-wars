function init(self)
	msg.post(".","acquire_input_focus")
	self.table = {
		{node = 'yes'},
		{node = 'no'},
	}
		
	
end

function on_input(self, action_id, action)
	function touching_node(name_of_node)
		return gui.pick_node(gui.get_node(name_of_node), action.x, action.y)
	end
	function hover(name_of_node,colour_being_set,size_being_set)
		gui.animate(gui.get_node(name_of_node),gui.PROP_COLOR, colour_being_set,gui.EASING_LINEAR,0.05)
		gui.animate(gui.get_node(name_of_node),gui.PROP_SCALE, size_being_set,gui.EASING_LINEAR,0.1)
		
	end
	function return_hover(name_of_node,colour_being_set,size_being_set)
		gui.animate(gui.get_node(name_of_node),gui.PROP_COLOR, colour_being_set,gui.EASING_LINEAR,0.05)
		gui.animate(gui.get_node(name_of_node),gui.PROP_SCALE, size_being_set,gui.EASING_LINEAR,0.1)

	end

	if touching_node('yes')  then
		if action.pressed then
			os.exit()
		else
			hover('yes',vmath.vector4(0.9,0.5,0.5,1),vmath.vector3(0.375,0.375,1))
		end
			
	elseif touching_node('no')  then
		if action.pressed then
			msg.post('main:/controller', "show main")
		else
			hover('no',vmath.vector4(0.5,0.9,0.5,1),vmath.vector3(0.375,0.375,1))
		end
	else
		for i,v in ipairs(self.table) do
			hover(v.node,vmath.vector4(1,1,1,1),vmath.vector3(0.25,0.25,1))
			-- gui.animate(gui.get_node(v.node),gui.PROP_SCALE , vmath.vector3(0.25,0.25,1), gui.EASING_LINEAR, 0.05)
			-- gui.animate(gui.get_node(v.node),gui.PROP_COLOR,vmath.vector4(1,1,1,1),gui.EASING_INSINE, 0.1)
		end
			
			
	end
		
		
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
